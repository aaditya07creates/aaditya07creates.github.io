I")|<p><br /></p>

<h2 id="introduction">INTRODUCTION</h2>

<p>The terminator is a robot from a movie that time travels into the past to save someone. I love watching robot movies and got goosebumbs after watching terminator. I decided to make a device that can let me see things like terminator does.
<br /></p>

<h2 id="basic-idea">Basic idea</h2>

<p>The ideas was to make a camera see things, apply filters to what the camera sees and look at the output instead of looking at the object directly like the apple vision.</p>

<p>My idea was to mount a camera and raspberry pi onto my universal VR headset and cast the input from the camera onto a phone through wifi inside the headset after applying face recognition, hand recognition and cool overlays.
<br /></p>

<h2 id="components-used">Components used</h2>

<ul>
  <li>Webcam - For taking video input.</li>
  <li>Raspberry pi 3 - This takes the camera input, applies the overlays and casts to the phone</li>
  <li>A VR headset - To see the output.</li>
  <li>A smartphone - to be put inside the vr headset as a display.</li>
  <li>A Powerbank - To power the contraption.</li>
</ul>

<p><img src="/assets/img/vrphone.jpg" alt="Setup" /></p>

<p><br /></p>

<h2 id="how-it-works">How it works</h2>

<p>The raspberry pi takes input from a webcam whose footage is passed through a python script, the script then applies overlays after detecting faces and hands with mediapipe and a local pretained face recognition model. The modified frames are streamed onto a website on the local wifi network through a library called flask. The frames are updated live at 60 frames per second, allowing for a more realistic feed.</p>

<h2 id="applications">Applications</h2>

<p>This project can be used for so many things apart for fun. For example,</p>
<ul>
  <li>Real time on road directions showing you where and which road to walk on by displaying arrow overlays on the road itself to navigate with ease.</li>
  <li>Detailed interactive overlays for engines and machines for mechanics to build and identify errors with ease.</li>
  <li>A vision enhancing headset for search and rescue with thermal vision, zoom capabilities and people detection.</li>
  <li>A multipurpose headset for the military or police force to find and catch suspects and criminals by checking their information and appearence against criminal records.</li>
  <li>A headset for students to easily search questions and solve doubts using a chatbot or the internet.</li>
</ul>

<h2 id="upgrades-and-ideas">Upgrades and ideas</h2>

<p>We can improve this base model in so many ways.</p>
<ul>
  <li>Using a better camera with zoom capabilities and high definition recording.</li>
  <li>Switching to a better portable computer like a raspberry pi 5.</li>
  <li>Lighter and better powerbank.</li>
  <li>Headset physical controls.</li>
  <li>Recording and picture capabilities.</li>
  <li>Number plate detection</li>
  <li>Text recognition</li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>This was a great project to research and apply knowledge about agumented reality and machine learning in camera feed. This may be the future for artificial intelligence application and a common gadget used in daily life.</p>

<h2 id="code">Code</h2>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
</pre></td><td class="code"><pre><span class="k">import</span> <span class="nx">cv2</span>
<span class="k">import</span> <span class="nx">datetime</span>
<span class="k">import</span> <span class="nx">numpy</span> <span class="nx">as</span> <span class="nx">np</span>
<span class="k">import</span> <span class="nx">random</span>
<span class="k">from</span> <span class="nx">flask</span> <span class="k">import</span> <span class="nx">Flask</span><span class="p">,</span> <span class="nx">Response</span>
<span class="k">import</span> <span class="nx">mediapipe</span> <span class="nx">as</span> <span class="nx">mp</span>

<span class="nx">app</span> <span class="o">=</span> <span class="nc">Flask</span><span class="p">(</span><span class="nx">__name__</span><span class="p">)</span>

<span class="err">#</span> <span class="nx">Initialize</span> <span class="nx">the</span> <span class="nx">camera</span>
<span class="nx">cap</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nc">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="k">if</span> <span class="nx">not</span> <span class="nx">cap</span><span class="p">.</span><span class="nf">isOpened</span><span class="p">():</span>
    <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Error: Unable to access the camera.</span><span class="dl">"</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">()</span>

<span class="err">#</span> <span class="nx">Load</span> <span class="nx">the</span> <span class="nx">pre</span><span class="o">-</span><span class="nx">trained</span> <span class="nx">MobileNet</span><span class="o">-</span><span class="nx">SSD</span> <span class="nx">model</span> <span class="k">for</span> <span class="nx">face</span> <span class="nx">detection</span>
<span class="nx">face_prototxt</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">C:</span><span class="se">\\</span><span class="s2">Users</span><span class="se">\\</span><span class="s2">aadit</span><span class="se">\\</span><span class="s2">Downloads</span><span class="se">\\</span><span class="s2">deploy.txt</span><span class="dl">"</span>
<span class="nx">face_model</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">C:</span><span class="se">\\</span><span class="s2">Users</span><span class="se">\\</span><span class="s2">aadit</span><span class="se">\\</span><span class="s2">Downloads</span><span class="se">\\</span><span class="s2">res10_300x300_ssd_iter_140000_fp16.caffemodel</span><span class="dl">"</span>
<span class="nx">face_net</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">dnn</span><span class="p">.</span><span class="nf">readNetFromCaffe</span><span class="p">(</span><span class="nx">face_prototxt</span><span class="p">,</span> <span class="nx">face_model</span><span class="p">)</span>

<span class="err">#</span> <span class="nx">Initialize</span> <span class="nx">MediaPipe</span> <span class="nx">Hands</span>
<span class="nx">mp_hands</span> <span class="o">=</span> <span class="nx">mp</span><span class="p">.</span><span class="nx">solutions</span><span class="p">.</span><span class="nx">hands</span>
<span class="nx">hands</span> <span class="o">=</span> <span class="nx">mp_hands</span><span class="p">.</span><span class="nc">Hands</span><span class="p">(</span><span class="nx">static_image_mode</span><span class="o">=</span><span class="nx">False</span><span class="p">,</span> <span class="nx">max_num_hands</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="nx">min_detection_confidence</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="nx">mp_drawing</span> <span class="o">=</span> <span class="nx">mp</span><span class="p">.</span><span class="nx">solutions</span><span class="p">.</span><span class="nx">drawing_utils</span>

<span class="err">#</span> <span class="nx">Shared</span> <span class="nx">variables</span>
<span class="nx">last_cpu_speed</span> <span class="o">=</span> <span class="mf">3.00</span>
<span class="nx">num_humans_detected</span> <span class="o">=</span> <span class="mi">0</span>
<span class="nx">number_lines</span> <span class="o">=</span> <span class="p">[]</span>

<span class="err">#</span> <span class="nx">Generate</span> <span class="nx">random</span> <span class="nx">rows</span> <span class="k">of</span> <span class="nx">numbers</span> <span class="k">for</span> <span class="dl">"</span><span class="s2">DATA ANALYSIS</span><span class="dl">"</span>
<span class="nx">def</span> <span class="nf">generate_random_numbers</span><span class="p">(</span><span class="nx">rows</span><span class="p">,</span> <span class="nx">cols</span><span class="p">):</span>
    <span class="k">return</span> <span class="p">[</span><span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nx">random</span><span class="p">.</span><span class="nf">choices</span><span class="p">(</span><span class="dl">"</span><span class="s2">0123456789</span><span class="dl">"</span><span class="p">,</span> <span class="nx">k</span><span class="o">=</span><span class="nx">cols</span><span class="p">))</span> <span class="k">for</span> <span class="nx">_</span> <span class="k">in</span> <span class="nf">range</span><span class="p">(</span><span class="nx">rows</span><span class="p">)]</span>

<span class="err">#</span> <span class="nx">Fake</span> <span class="nx">CPU</span> <span class="nx">speed</span> <span class="nx">generator</span>
<span class="nx">def</span> <span class="nf">generate_cpu_speed</span><span class="p">(</span><span class="nx">last_speed</span><span class="p">):</span>
    <span class="nx">change</span> <span class="o">=</span> <span class="nx">random</span><span class="p">.</span><span class="nf">uniform</span><span class="p">(</span><span class="o">-</span><span class="mf">0.03</span><span class="p">,</span> <span class="mf">0.03</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Random</span> <span class="nx">fluctuation</span>
    <span class="nx">new_speed</span> <span class="o">=</span> <span class="nx">last_speed</span> <span class="o">+</span> <span class="nx">change</span>
    <span class="nx">new_speed</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="mf">2.50</span><span class="p">,</span> <span class="nf">min</span><span class="p">(</span><span class="mf">3.50</span><span class="p">,</span> <span class="nx">new_speed</span><span class="p">))</span>  <span class="err">#</span> <span class="nx">Constrain</span> <span class="nx">between</span> <span class="mf">2.50</span> <span class="nx">GHz</span> <span class="nx">and</span> <span class="mf">3.50</span> <span class="nx">GHz</span>
    <span class="k">return</span> <span class="nx">f</span><span class="dl">"</span><span class="s2">CPU Speed: {new_speed:.2f} GHz</span><span class="dl">"</span><span class="p">,</span> <span class="nx">new_speed</span>

<span class="err">#</span> <span class="nx">Main</span> <span class="nx">frame</span> <span class="nx">processing</span> <span class="kd">function</span>
<span class="nf">def</span> <span class="nf">process_frame</span><span class="p">(</span><span class="nx">frame</span><span class="p">):</span>
    <span class="nb">global</span> <span class="nx">last_cpu_speed</span><span class="p">,</span> <span class="nx">num_humans_detected</span><span class="p">,</span> <span class="nx">number_lines</span>

    <span class="err">#</span> <span class="nx">Resize</span> <span class="nx">the</span> <span class="nx">frame</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">the</span> <span class="nx">whole</span> <span class="nb">window</span>
    <span class="nx">frame</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nf">resize</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">))</span>

    <span class="err">#</span> <span class="nx">Apply</span> <span class="nx">a</span> <span class="nx">darker</span> <span class="nx">red</span> <span class="nx">tint</span> <span class="nx">overlay</span>
    <span class="nx">red_tint</span> <span class="o">=</span> <span class="nx">np</span><span class="p">.</span><span class="nf">zeros_like</span><span class="p">(</span><span class="nx">frame</span><span class="p">)</span>
    <span class="nx">red_tint</span><span class="p">[:,</span> <span class="p">:,</span> <span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">150</span>
    <span class="nx">frame</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nf">addWeighted</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nx">red_tint</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

    <span class="err">#</span> <span class="nx">Perform</span> <span class="nx">face</span> <span class="nx">detection</span>
    <span class="nx">blob</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">dnn</span><span class="p">.</span><span class="nf">blobFromImage</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">),</span> <span class="p">(</span><span class="mf">104.0</span><span class="p">,</span> <span class="mf">177.0</span><span class="p">,</span> <span class="mf">123.0</span><span class="p">))</span>
    <span class="nx">face_net</span><span class="p">.</span><span class="nf">setInput</span><span class="p">(</span><span class="nx">blob</span><span class="p">)</span>
    <span class="nx">detections</span> <span class="o">=</span> <span class="nx">face_net</span><span class="p">.</span><span class="nf">forward</span><span class="p">()</span>
    <span class="nx">num_humans_detected</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="k">in</span> <span class="nf">range</span><span class="p">(</span><span class="nx">detections</span><span class="p">.</span><span class="nx">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]):</span>
        <span class="nx">confidence</span> <span class="o">=</span> <span class="nx">detections</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
        <span class="k">if</span> <span class="nx">confidence</span> <span class="o">&gt;</span> <span class="mf">0.3</span><span class="p">:</span>  <span class="err">#</span> <span class="nx">Confidence</span> <span class="nx">threshold</span>
            <span class="nx">num_humans_detected</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="nx">box</span> <span class="o">=</span> <span class="nx">detections</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="mi">3</span><span class="p">:</span><span class="mi">7</span><span class="p">]</span> <span class="o">*</span> <span class="nx">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">,</span> <span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">])</span>
            <span class="p">(</span><span class="nx">startX</span><span class="p">,</span> <span class="nx">startY</span><span class="p">,</span> <span class="nx">endX</span><span class="p">,</span> <span class="nx">endY</span><span class="p">)</span> <span class="o">=</span> <span class="nx">box</span><span class="p">.</span><span class="nf">astype</span><span class="p">(</span><span class="dl">"</span><span class="s2">int</span><span class="dl">"</span><span class="p">)</span>
            <span class="nx">cv2</span><span class="p">.</span><span class="nf">rectangle</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="p">(</span><span class="nx">startX</span><span class="p">,</span> <span class="nx">startY</span><span class="p">),</span> <span class="p">(</span><span class="nx">endX</span><span class="p">,</span> <span class="nx">endY</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
            <span class="nx">label</span> <span class="o">=</span> <span class="nx">f</span><span class="dl">"</span><span class="s2">{confidence * 100:.1f}%</span><span class="dl">"</span>
            <span class="nx">cv2</span><span class="p">.</span><span class="nf">putText</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="nx">label</span><span class="p">,</span> <span class="p">(</span><span class="nx">startX</span><span class="p">,</span> <span class="nx">startY</span> <span class="o">-</span> <span class="mi">10</span><span class="p">),</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">FONT_HERSHEY_SIMPLEX</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>

    <span class="err">#</span> <span class="nx">Perform</span> <span class="nx">hand</span> <span class="nx">detection</span>
    <span class="nx">rgb_frame</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nf">cvtColor</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">COLOR_BGR2RGB</span><span class="p">)</span>
    <span class="nx">results</span> <span class="o">=</span> <span class="nx">hands</span><span class="p">.</span><span class="nf">process</span><span class="p">(</span><span class="nx">rgb_frame</span><span class="p">)</span>
    <span class="k">if</span> <span class="nx">results</span><span class="p">.</span><span class="nx">multi_hand_landmarks</span><span class="p">:</span>
        <span class="k">for</span> <span class="nx">hand_landmarks</span> <span class="k">in</span> <span class="nx">results</span><span class="p">.</span><span class="nx">multi_hand_landmarks</span><span class="p">:</span>
            <span class="nx">mp_drawing</span><span class="p">.</span><span class="nf">draw_landmarks</span><span class="p">(</span>
                <span class="nx">frame</span><span class="p">,</span> <span class="nx">hand_landmarks</span><span class="p">,</span> <span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HAND_CONNECTIONS</span><span class="p">,</span>
                <span class="nx">mp_drawing</span><span class="p">.</span><span class="nc">DrawingSpec</span><span class="p">(</span><span class="nx">color</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="nx">thickness</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="nx">circle_radius</span><span class="o">=</span><span class="mi">2</span><span class="p">),</span>
                <span class="nx">mp_drawing</span><span class="p">.</span><span class="nc">DrawingSpec</span><span class="p">(</span><span class="nx">color</span><span class="o">=</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="nx">thickness</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="nx">circle_radius</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
            <span class="p">)</span>

    <span class="err">#</span> <span class="nx">Add</span> <span class="nx">diagnostic</span> <span class="nx">text</span>
    <span class="nx">now</span> <span class="o">=</span> <span class="nx">datetime</span><span class="p">.</span><span class="nx">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span>
    <span class="nx">cpu_speed_text</span><span class="p">,</span> <span class="nx">last_cpu_speed</span> <span class="o">=</span> <span class="nf">generate_cpu_speed</span><span class="p">(</span><span class="nx">last_cpu_speed</span><span class="p">)</span>
    <span class="nx">diagnostics</span> <span class="o">=</span> <span class="p">[</span>
        <span class="nx">f</span><span class="dl">"</span><span class="s2">TIME: {now.strftime('%H:%M:%S')}</span><span class="dl">"</span><span class="p">,</span>
        <span class="nx">f</span><span class="dl">"</span><span class="s2">STATUS: OPERATIONAL</span><span class="dl">"</span><span class="p">,</span>
        <span class="nx">cpu_speed_text</span><span class="p">,</span>
        <span class="nx">f</span><span class="dl">"</span><span class="s2">HUMANS DETECTED: {num_humans_detected}</span><span class="dl">"</span><span class="p">,</span>
    <span class="p">]</span>
    <span class="nx">y_offset</span> <span class="o">=</span> <span class="mi">20</span>
    <span class="k">for</span> <span class="nx">text</span> <span class="k">in</span> <span class="nx">diagnostics</span><span class="p">:</span>
        <span class="nx">cv2</span><span class="p">.</span><span class="nf">putText</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="nx">text</span><span class="p">,</span> <span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="nx">y_offset</span><span class="p">),</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">FONT_HERSHEY_SIMPLEX</span><span class="p">,</span> <span class="mf">0.6</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">LINE_AA</span><span class="p">)</span>
        <span class="nx">y_offset</span> <span class="o">+=</span> <span class="mi">20</span>

    <span class="err">#</span> <span class="nx">Add</span> <span class="dl">"</span><span class="s2">DATA ANALYSIS</span><span class="dl">"</span> <span class="nx">text</span> <span class="nx">and</span> <span class="nx">random</span> <span class="nx">numbers</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">right</span>
    <span class="k">if</span> <span class="nx">not</span> <span class="nx">number_lines</span> <span class="nx">or</span> <span class="nx">random</span><span class="p">.</span><span class="nf">random</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mf">0.1</span><span class="p">:</span>  <span class="err">#</span> <span class="nx">Update</span> <span class="nx">numbers</span> <span class="nx">occasionally</span>
        <span class="nx">number_lines</span> <span class="o">=</span> <span class="nf">generate_random_numbers</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>

    <span class="nx">cv2</span><span class="p">.</span><span class="nf">putText</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="dl">"</span><span class="s2">DATA ANALYSIS</span><span class="dl">"</span><span class="p">,</span> <span class="p">(</span><span class="mi">700</span><span class="p">,</span> <span class="mi">30</span><span class="p">),</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">FONT_HERSHEY_SIMPLEX</span><span class="p">,</span> <span class="mf">0.6</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">LINE_AA</span><span class="p">)</span>
    <span class="nx">x_offset</span> <span class="o">=</span> <span class="mi">700</span>
    <span class="nx">y_offset</span> <span class="o">=</span> <span class="mi">60</span>
    <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">line</span> <span class="k">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="nx">number_lines</span><span class="p">):</span>
        <span class="nx">cv2</span><span class="p">.</span><span class="nf">putText</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="nx">line</span><span class="p">,</span> <span class="p">(</span><span class="nx">x_offset</span><span class="p">,</span> <span class="nx">y_offset</span> <span class="o">+</span> <span class="p">(</span><span class="nx">i</span> <span class="o">*</span> <span class="mi">30</span><span class="p">)),</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">FONT_HERSHEY_SIMPLEX</span><span class="p">,</span> <span class="mf">0.6</span><span class="p">,</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">),</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">LINE_AA</span><span class="p">)</span>

    <span class="k">return</span> <span class="nx">frame</span>

<span class="err">#</span> <span class="nx">Generate</span> <span class="nx">frames</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">video</span> <span class="nx">feed</span>
<span class="nx">def</span> <span class="nf">generate_frames</span><span class="p">():</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">while</span> <span class="nx">True</span><span class="p">:</span>
            <span class="nx">ret</span><span class="p">,</span> <span class="nx">frame</span> <span class="o">=</span> <span class="nx">cap</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
            <span class="k">if</span> <span class="nx">not</span> <span class="nx">ret</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Failed to grab frame.</span><span class="dl">"</span><span class="p">)</span>
                <span class="k">break</span>

            <span class="err">#</span> <span class="nx">Process</span> <span class="nx">the</span> <span class="nx">frame</span>
            <span class="nx">processed_frame</span> <span class="o">=</span> <span class="nf">process_frame</span><span class="p">(</span><span class="nx">frame</span><span class="p">)</span>

            <span class="err">#</span> <span class="nx">Create</span> <span class="nx">side</span><span class="o">-</span><span class="nx">by</span><span class="o">-</span><span class="nx">side</span> <span class="nx">stereo</span> <span class="nx">frames</span>
            <span class="nx">stereo_frame</span> <span class="o">=</span> <span class="nx">np</span><span class="p">.</span><span class="nf">hstack</span><span class="p">((</span><span class="nx">processed_frame</span><span class="p">,</span> <span class="nx">processed_frame</span><span class="p">))</span>

            <span class="err">#</span> <span class="nx">Encode</span> <span class="nx">frame</span> <span class="nx">to</span> <span class="nx">JPEG</span> <span class="nx">format</span>
            <span class="nx">_</span><span class="p">,</span> <span class="nx">buffer</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nf">imencode</span><span class="p">(</span><span class="dl">'</span><span class="s1">.jpg</span><span class="dl">'</span><span class="p">,</span> <span class="nx">stereo_frame</span><span class="p">)</span>
            <span class="nx">frame</span> <span class="o">=</span> <span class="nx">buffer</span><span class="p">.</span><span class="nf">tobytes</span><span class="p">()</span>

            <span class="k">yield </span><span class="p">(</span><span class="nx">b</span><span class="dl">'</span><span class="s1">--frame</span><span class="se">\r\n</span><span class="dl">'</span><span class="nx">b</span><span class="dl">'</span><span class="s1">Content-Type: image/jpeg</span><span class="se">\r\n\r\n</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">frame</span> <span class="o">+</span> <span class="nx">b</span><span class="dl">'</span><span class="se">\r\n</span><span class="dl">'</span><span class="p">)</span>
    <span class="k">finally</span><span class="p">:</span>
        <span class="nx">cap</span><span class="p">.</span><span class="nf">release</span><span class="p">()</span>
        <span class="nx">cv2</span><span class="p">.</span><span class="nf">destroyAllWindows</span><span class="p">()</span>

<span class="p">@</span><span class="nd">app</span><span class="p">.</span><span class="nf">route</span><span class="p">(</span><span class="dl">'</span><span class="s1">/video</span><span class="dl">'</span><span class="p">)</span>
<span class="nx">def</span> <span class="nf">video_feed</span><span class="p">():</span>
    <span class="k">return</span> <span class="nc">Response</span><span class="p">(</span><span class="nf">generate_frames</span><span class="p">(),</span> <span class="nx">mimetype</span><span class="o">=</span><span class="dl">'</span><span class="s1">multipart/x-mixed-replace; boundary=frame</span><span class="dl">'</span><span class="p">)</span>

<span class="k">if</span> <span class="nx">__name__</span> <span class="o">==</span> <span class="dl">"</span><span class="s2">__main__</span><span class="dl">"</span><span class="p">:</span>
    <span class="nx">app</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="nx">host</span><span class="o">=</span><span class="dl">'</span><span class="s1">0.0.0.0</span><span class="dl">'</span><span class="p">,</span> <span class="nx">port</span><span class="o">=</span><span class="mi">5000</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></figure>
:ET