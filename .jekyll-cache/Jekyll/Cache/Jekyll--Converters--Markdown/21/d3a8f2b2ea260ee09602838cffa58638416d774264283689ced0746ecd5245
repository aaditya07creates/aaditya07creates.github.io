I"§w<p><br /></p>

<h2 id="introduction">Introduction</h2>

<p>I was going through my laptop settings one day and found and option for eyetracking, sadly it was disabled as my hardware wasn‚Äôt compattible. So I decided to make my own. Instead of eye tracking I felt that hand gestures would be much cooler and make me feel like iron man :D. My goal was to make a program to capture a video from my laptop camera live and detect hand signs using a hand recognition model to control my laptop without me haing to physically touch the laptop. I did the full project using python.
<br /></p>

<h2 id="how-it-works">How it works</h2>

<p>I used the OpenCV library to capture frames from my camera. I passed the incoming frames into a google‚Äôs ML mediapipe, it is a python library that can be used for various purposes. After the model dectects a certain gesture, the script uses the pyautogui library to give my laptop keyboard commands.</p>

<p>I programmed 2 gestures:</p>
<ul>
  <li>Alt+tab : Align your fingers (including thumb) straight and swipe right or left to change windows according to the direction</li>
  <li>Scrolling : join your pointer finger and thumb and flex all other fingers in a ‚Äúnice‚Äù hand sign. Hold the pointer and thumb together and move your hand to scroll as if you are grabbing the page, move your thumb and pointer apart to stop scrolling and move your hand to its intial position.</li>
</ul>

<p>Programming more gestures is much easier after getting the basic code done.</p>

<h2 id="conclusion">Conclusion</h2>
<p>This is just the beginning for all sorts of possibilities, interactive holograms, new air keyboards, immersive and intuitive ui interaction, new ways of gaming and so much more. This is a glimpse into what our future could look like.</p>

<h2 id="code">Code</h2>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
</pre></td><td class="code"><pre><span class="k">import</span> <span class="nx">cv2</span>
<span class="k">import</span> <span class="nx">mediapipe</span> <span class="nx">as</span> <span class="nx">mp</span>
<span class="k">import</span> <span class="nx">pyautogui</span>
<span class="k">import</span> <span class="nx">numpy</span> <span class="nx">as</span> <span class="nx">np</span>
<span class="k">import</span> <span class="nx">time</span>
<span class="k">import</span> <span class="nx">threading</span>

<span class="err">#</span> <span class="nx">Initialize</span> <span class="nx">MediaPipe</span> <span class="nx">Hand</span> <span class="nx">Detection</span>
<span class="nx">mp_hands</span> <span class="o">=</span> <span class="nx">mp</span><span class="p">.</span><span class="nx">solutions</span><span class="p">.</span><span class="nx">hands</span>
<span class="nx">hands</span> <span class="o">=</span> <span class="nx">mp_hands</span><span class="p">.</span><span class="nc">Hands</span><span class="p">(</span><span class="nx">max_num_hands</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="nx">min_detection_confidence</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="nx">min_tracking_confidence</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Min</span> <span class="nx">confidence</span> <span class="nx">thresholds</span>
<span class="nx">mp_drawing</span> <span class="o">=</span> <span class="nx">mp</span><span class="p">.</span><span class="nx">solutions</span><span class="p">.</span><span class="nx">drawing_utils</span>

<span class="err">#</span> <span class="nx">Initialize</span> <span class="nx">camera</span> <span class="kd">with</span> <span class="nx">higher</span> <span class="nx">resolution</span> <span class="nx">and</span> <span class="nx">frame</span> <span class="nx">rate</span>
<span class="nx">cap</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nc">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="nx">cap</span><span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="nx">cv2</span><span class="p">.</span><span class="nx">CAP_PROP_FRAME_WIDTH</span><span class="p">,</span> <span class="mi">1280</span><span class="p">)</span>  <span class="err">#</span> <span class="nb">Set</span> <span class="nx">resolution</span> <span class="nx">width</span>
<span class="nx">cap</span><span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="nx">cv2</span><span class="p">.</span><span class="nx">CAP_PROP_FRAME_HEIGHT</span><span class="p">,</span> <span class="mi">720</span><span class="p">)</span>  <span class="err">#</span> <span class="nb">Set</span> <span class="nx">resolution</span> <span class="nx">height</span>
<span class="nx">cap</span><span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="nx">cv2</span><span class="p">.</span><span class="nx">CAP_PROP_FPS</span><span class="p">,</span> <span class="mi">60</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Increase</span> <span class="nx">FPS</span> <span class="nx">to</span> <span class="mi">60</span>

<span class="err">#</span> <span class="nx">Gesture</span> <span class="nx">control</span> <span class="nx">variables</span>
<span class="nx">scroll_smooth_factor</span> <span class="o">=</span> <span class="mf">0.1</span>  <span class="err">#</span> <span class="nx">Smooth</span> <span class="nx">scroll</span> <span class="nf">factor </span><span class="p">(</span><span class="nx">lower</span> <span class="o">=</span> <span class="nx">smoother</span><span class="p">)</span>
<span class="nx">last_scroll_position</span> <span class="o">=</span> <span class="nx">None</span>
<span class="nx">scrolling</span> <span class="o">=</span> <span class="nx">False</span>
<span class="nx">last_finger_position</span> <span class="o">=</span> <span class="nx">None</span>
<span class="nx">last_sway_direction</span> <span class="o">=</span> <span class="nx">None</span>
<span class="nx">last_sway_time</span> <span class="o">=</span> <span class="nx">time</span><span class="p">.</span><span class="nf">time</span><span class="p">()</span>
<span class="nx">alt_tab_threshold</span> <span class="o">=</span> <span class="mi">30</span>  <span class="err">#</span> <span class="nx">Gesture</span> <span class="nx">threshold</span> <span class="k">for</span> <span class="nx">Alt</span><span class="o">+</span><span class="nc">Tab </span><span class="p">(</span><span class="nx">previous</span> <span class="nx">method</span><span class="p">)</span>
<span class="nx">alt_tab_direction</span> <span class="o">=</span> <span class="nx">None</span>  <span class="err">#</span> <span class="nx">To</span> <span class="nx">track</span> <span class="nx">swipe</span> <span class="nx">direction</span> <span class="k">for</span> <span class="nx">Alt</span><span class="o">+</span><span class="nc">Tab </span><span class="p">(</span><span class="nx">left</span> <span class="nx">or</span> <span class="nx">right</span><span class="p">)</span>
<span class="nx">last_alt_tab_time</span> <span class="o">=</span> <span class="mi">0</span>  <span class="err">#</span> <span class="nx">Time</span> <span class="nx">when</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span> <span class="nx">was</span> <span class="nx">last</span> <span class="nx">performed</span>
<span class="nx">alt_tab_cooldown</span> <span class="o">=</span> <span class="mf">1.5</span>  <span class="err">#</span> <span class="mf">1.5</span> <span class="nx">seconds</span> <span class="nx">cooldown</span> <span class="k">for</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span>

<span class="err">#</span> <span class="nx">Threading</span> <span class="kd">function</span> <span class="nf">for</span> <span class="nx">capturing</span> <span class="nx">frames</span>
<span class="nx">def</span> <span class="nf">capture_frame</span><span class="p">():</span>
    <span class="nb">global</span> <span class="nx">frame</span>
    <span class="k">while</span> <span class="nx">True</span><span class="p">:</span>
        <span class="nx">ret</span><span class="p">,</span> <span class="nx">frame</span> <span class="o">=</span> <span class="nx">cap</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
        <span class="k">if</span> <span class="nx">not</span> <span class="nx">ret</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Failed to grab frame</span><span class="dl">"</span><span class="p">)</span>
            <span class="k">break</span>

<span class="err">#</span> <span class="nx">Check</span> <span class="k">if</span> <span class="nx">camera</span> <span class="nx">is</span> <span class="nx">opened</span> <span class="nx">successfully</span>
<span class="k">if</span> <span class="nx">not</span> <span class="nx">cap</span><span class="p">.</span><span class="nf">isOpened</span><span class="p">():</span>
    <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Error: Camera not accessible.</span><span class="dl">"</span><span class="p">)</span>
    <span class="nf">exit</span><span class="p">()</span>

<span class="err">#</span> <span class="nx">Start</span> <span class="nx">the</span> <span class="nx">frame</span> <span class="nx">capture</span> <span class="k">in</span> <span class="nx">a</span> <span class="nx">separate</span> <span class="nx">thread</span>
<span class="nx">frame_thread</span> <span class="o">=</span> <span class="nx">threading</span><span class="p">.</span><span class="nc">Thread</span><span class="p">(</span><span class="nx">target</span><span class="o">=</span><span class="nx">capture_frame</span><span class="p">)</span>
<span class="nx">frame_thread</span><span class="p">.</span><span class="nx">daemon</span> <span class="o">=</span> <span class="nx">True</span>
<span class="nx">frame_thread</span><span class="p">.</span><span class="nf">start</span><span class="p">()</span>

<span class="err">#</span> <span class="nb">Function</span> <span class="nx">to</span> <span class="nx">calculate</span> <span class="nx">the</span> <span class="nx">distance</span> <span class="nx">between</span> <span class="nx">two</span> <span class="nx">points</span>
<span class="nx">def</span> <span class="nf">calculate_distance</span><span class="p">(</span><span class="nx">p1</span><span class="p">,</span> <span class="nx">p2</span><span class="p">):</span>
    <span class="k">return</span> <span class="nx">np</span><span class="p">.</span><span class="nx">linalg</span><span class="p">.</span><span class="nf">norm</span><span class="p">(</span><span class="nx">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="nx">p1</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">p1</span><span class="p">.</span><span class="nx">y</span><span class="p">])</span> <span class="o">-</span> <span class="nx">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="nx">p2</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">p2</span><span class="p">.</span><span class="nx">y</span><span class="p">]))</span>

<span class="err">#</span> <span class="nb">Function</span> <span class="nx">to</span> <span class="nx">handle</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span> <span class="nx">based</span> <span class="nx">on</span> <span class="nx">swipe</span> <span class="nx">direction</span>
<span class="nx">def</span> <span class="nf">alt_tab_switch</span><span class="p">(</span><span class="nx">direction</span><span class="o">=</span><span class="dl">'</span><span class="s1">right</span><span class="dl">'</span><span class="p">):</span>
    <span class="nb">global</span> <span class="nx">last_alt_tab_time</span>  <span class="err">#</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">the</span> <span class="nb">global</span> <span class="nx">variable</span>
    <span class="nx">current_time</span> <span class="o">=</span> <span class="nx">time</span><span class="p">.</span><span class="nf">time</span><span class="p">()</span>
    <span class="k">if</span> <span class="nx">current_time</span> <span class="o">-</span> <span class="nx">last_alt_tab_time</span> <span class="o">&gt;</span> <span class="nx">alt_tab_cooldown</span><span class="p">:</span>  <span class="err">#</span> <span class="nx">Check</span> <span class="k">if</span> <span class="nx">enough</span> <span class="nx">time</span> <span class="nx">has</span> <span class="nx">passed</span> <span class="nx">since</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span>
        <span class="nx">pyautogui</span><span class="p">.</span><span class="nf">keyDown</span><span class="p">(</span><span class="dl">'</span><span class="s1">alt</span><span class="dl">'</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Hold</span> <span class="nx">down</span> <span class="nx">the</span> <span class="nx">Alt</span> <span class="nx">key</span>
        <span class="k">if</span> <span class="nx">direction</span> <span class="o">==</span> <span class="dl">'</span><span class="s1">right</span><span class="dl">'</span><span class="p">:</span>
            <span class="nx">pyautogui</span><span class="p">.</span><span class="nf">press</span><span class="p">(</span><span class="dl">'</span><span class="s1">tab</span><span class="dl">'</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Press</span> <span class="nx">Tab</span> <span class="nx">to</span> <span class="k">switch</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">next</span> <span class="nb">window</span>
        <span class="nx">elif</span> <span class="nx">direction</span> <span class="o">==</span> <span class="dl">'</span><span class="s1">left</span><span class="dl">'</span><span class="p">:</span>
            <span class="nx">pyautogui</span><span class="p">.</span><span class="nf">hotkey</span><span class="p">(</span><span class="dl">'</span><span class="s1">alt</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">shift</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">tab</span><span class="dl">'</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Press</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Shift</span><span class="o">+</span><span class="nx">Tab</span> <span class="nx">to</span> <span class="nx">go</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">previous</span> <span class="nb">window</span>
        <span class="nx">pyautogui</span><span class="p">.</span><span class="nf">keyUp</span><span class="p">(</span><span class="dl">'</span><span class="s1">alt</span><span class="dl">'</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Release</span> <span class="nx">the</span> <span class="nx">Alt</span> <span class="nx">key</span>
        <span class="nx">last_alt_tab_time</span> <span class="o">=</span> <span class="nx">current_time</span>  <span class="err">#</span> <span class="nx">Update</span> <span class="nx">the</span> <span class="nx">time</span> <span class="k">of</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span>

<span class="k">while</span> <span class="nx">True</span><span class="p">:</span>
    <span class="err">#</span> <span class="nx">Wait</span> <span class="nx">until</span> <span class="nx">the</span> <span class="nx">frame</span> <span class="nx">is</span> <span class="nx">captured</span>
    <span class="k">if</span> <span class="dl">'</span><span class="s1">frame</span><span class="dl">'</span> <span class="nx">not</span> <span class="k">in</span> <span class="nf">globals</span><span class="p">()</span> <span class="nx">or</span> <span class="nx">frame</span> <span class="nx">is</span> <span class="nx">None</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="dl">"</span><span class="s2">Waiting for frame...</span><span class="dl">"</span><span class="p">)</span>
        <span class="nx">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)</span>
        <span class="k">continue</span>

    <span class="err">#</span> <span class="nx">Convert</span> <span class="nx">to</span> <span class="nc">RGB </span><span class="p">(</span><span class="nx">MediaPipe</span> <span class="nx">requires</span> <span class="nx">RGB</span><span class="p">)</span>
    <span class="nx">rgb_frame</span> <span class="o">=</span> <span class="nx">cv2</span><span class="p">.</span><span class="nf">cvtColor</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="nx">cv2</span><span class="p">.</span><span class="nx">COLOR_BGR2RGB</span><span class="p">)</span>
    <span class="nx">results</span> <span class="o">=</span> <span class="nx">hands</span><span class="p">.</span><span class="nf">process</span><span class="p">(</span><span class="nx">rgb_frame</span><span class="p">)</span>

    <span class="err">#</span> <span class="nx">Check</span> <span class="k">if</span> <span class="nx">hands</span> <span class="nx">are</span> <span class="nx">detected</span>
    <span class="k">if</span> <span class="nx">results</span><span class="p">.</span><span class="nx">multi_hand_landmarks</span><span class="p">:</span>
        <span class="k">for</span> <span class="nx">landmarks</span> <span class="k">in</span> <span class="nx">results</span><span class="p">.</span><span class="nx">multi_hand_landmarks</span><span class="p">:</span>
            <span class="err">#</span> <span class="nx">Draw</span> <span class="nx">hand</span> <span class="nx">landmarks</span>
            <span class="nx">mp_drawing</span><span class="p">.</span><span class="nf">draw_landmarks</span><span class="p">(</span><span class="nx">frame</span><span class="p">,</span> <span class="nx">landmarks</span><span class="p">,</span> <span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HAND_CONNECTIONS</span><span class="p">)</span>
            
            <span class="err">#</span> <span class="nx">Extract</span> <span class="nx">finger</span> <span class="nf">positions </span><span class="p">(</span><span class="nx">fingertip</span> <span class="nx">positions</span><span class="p">)</span>
            <span class="nx">thumb_tip</span> <span class="o">=</span> <span class="nx">landmarks</span><span class="p">.</span><span class="nx">landmark</span><span class="p">[</span><span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HandLandmark</span><span class="p">.</span><span class="nx">THUMB_TIP</span><span class="p">]</span>
            <span class="nx">index_tip</span> <span class="o">=</span> <span class="nx">landmarks</span><span class="p">.</span><span class="nx">landmark</span><span class="p">[</span><span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HandLandmark</span><span class="p">.</span><span class="nx">INDEX_FINGER_TIP</span><span class="p">]</span>
            <span class="nx">middle_tip</span> <span class="o">=</span> <span class="nx">landmarks</span><span class="p">.</span><span class="nx">landmark</span><span class="p">[</span><span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HandLandmark</span><span class="p">.</span><span class="nx">MIDDLE_FINGER_TIP</span><span class="p">]</span>
            <span class="nx">ring_tip</span> <span class="o">=</span> <span class="nx">landmarks</span><span class="p">.</span><span class="nx">landmark</span><span class="p">[</span><span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HandLandmark</span><span class="p">.</span><span class="nx">RING_FINGER_TIP</span><span class="p">]</span>
            <span class="nx">pinky_tip</span> <span class="o">=</span> <span class="nx">landmarks</span><span class="p">.</span><span class="nx">landmark</span><span class="p">[</span><span class="nx">mp_hands</span><span class="p">.</span><span class="nx">HandLandmark</span><span class="p">.</span><span class="nx">PINKY_TIP</span><span class="p">]</span>
            
            <span class="err">#</span> <span class="nx">Gesture</span> <span class="mi">1</span><span class="p">:</span> <span class="nx">Pinching</span> <span class="nc">Gesture </span><span class="p">(</span><span class="nx">Scroll</span><span class="p">)</span>
            <span class="err">#</span> <span class="nx">Pinch</span> <span class="nx">thumb</span> <span class="nx">and</span> <span class="nx">index</span> <span class="nx">finger</span><span class="p">,</span> <span class="nx">other</span> <span class="nx">fingers</span> <span class="nx">extended</span>
            <span class="nx">distance</span> <span class="o">=</span> <span class="nf">calculate_distance</span><span class="p">(</span><span class="nx">thumb_tip</span><span class="p">,</span> <span class="nx">index_tip</span><span class="p">)</span>
            <span class="nx">other_fingers_distance</span> <span class="o">=</span> <span class="nf">calculate_distance</span><span class="p">(</span><span class="nx">middle_tip</span><span class="p">,</span> <span class="nx">ring_tip</span><span class="p">)</span> <span class="o">+</span> <span class="nf">calculate_distance</span><span class="p">(</span><span class="nx">ring_tip</span><span class="p">,</span> <span class="nx">pinky_tip</span><span class="p">)</span>
            
            <span class="err">#</span> <span class="nx">Adjust</span> <span class="nx">the</span> <span class="nx">scrolling</span> <span class="nx">gesture</span> <span class="k">for</span> <span class="nx">more</span> <span class="nx">sensitivity</span> <span class="nx">and</span> <span class="nx">smoother</span> <span class="nx">scrolling</span>
            <span class="k">if</span> <span class="nx">distance</span> <span class="o">&lt;</span> <span class="mf">0.04</span> <span class="nx">and</span> <span class="nx">other_fingers_distance</span> <span class="o">&gt;</span> <span class="mf">0.1</span><span class="p">:</span>
                <span class="k">if</span> <span class="nx">last_scroll_position</span><span class="p">:</span>
                    <span class="nx">delta_y</span> <span class="o">=</span> <span class="nx">index_tip</span><span class="p">.</span><span class="nx">y</span> <span class="o">-</span> <span class="nx">last_scroll_position</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
                    <span class="k">if</span> <span class="nf">abs</span><span class="p">(</span><span class="nx">delta_y</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mf">0.02</span><span class="p">:</span>  <span class="err">#</span> <span class="nx">Reduced</span> <span class="nx">threshold</span> <span class="k">for</span> <span class="nx">smoother</span> <span class="nx">scroll</span>
                        <span class="nx">scroll_amount</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nx">delta_y</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Increased</span> <span class="nx">scrolling</span> <span class="nx">speed</span> <span class="k">for</span> <span class="nx">more</span> <span class="nx">responsiveness</span>
                        <span class="nx">pyautogui</span><span class="p">.</span><span class="nf">scroll</span><span class="p">(</span><span class="nx">scroll_amount</span><span class="p">)</span>
                        <span class="nx">scrolling</span> <span class="o">=</span> <span class="nx">True</span>  <span class="err">#</span> <span class="nb">Set</span> <span class="nx">scrolling</span> <span class="nx">flag</span> <span class="nx">to</span> <span class="kc">true</span>
                <span class="nx">last_scroll_position</span> <span class="o">=</span> <span class="p">[</span><span class="nx">index_tip</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">index_tip</span><span class="p">.</span><span class="nx">y</span><span class="p">]</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="err">#</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">fingers</span> <span class="nx">aren</span><span class="dl">'</span><span class="s1">t pinched, stop scrolling
                scrolling = False
                last_scroll_position = None

            # Gesture 2: Swipe Gesture (Alt+Tab)
            # Detect hand swipe (only horizontal)
            thumb_y = thumb_tip.y
            index_y = index_tip.y
            middle_y = middle_tip.y

            # Determine the swipe gesture direction (only horizontal)
            swipe_threshold = 0.15
            if abs(thumb_y - index_y) &lt; swipe_threshold and abs(index_y - middle_y) &lt; swipe_threshold:
                if last_finger_position:
                    swipe_distance_x = index_tip.x - last_finger_position[0]

                    # Trigger Alt+Tab only for horizontal swipe (ignore vertical)
                    if abs(swipe_distance_x) &gt; swipe_threshold and not scrolling:  # Don</span><span class="dl">'</span><span class="nx">t</span> <span class="nx">trigger</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span> <span class="k">if</span> <span class="nx">scrolling</span> <span class="nx">is</span> <span class="nx">active</span>
                        <span class="err">#</span> <span class="nx">Determine</span> <span class="nx">the</span> <span class="nx">direction</span> <span class="k">of</span> <span class="nx">swipe</span>
                        <span class="k">if</span> <span class="nx">swipe_distance_x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
                            <span class="nx">alt_tab_direction</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">left</span><span class="dl">'</span>  <span class="err">#</span> <span class="nx">Left</span> <span class="nx">swipe</span>
                        <span class="k">else</span><span class="p">:</span>
                            <span class="nx">alt_tab_direction</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">right</span><span class="dl">'</span>  <span class="err">#</span> <span class="nx">Right</span> <span class="nx">swipe</span>
                        <span class="nf">alt_tab_switch</span><span class="p">(</span><span class="nx">alt_tab_direction</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Perform</span> <span class="nx">Alt</span><span class="o">+</span><span class="nx">Tab</span>
                        <span class="nx">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>  <span class="err">#</span> <span class="nx">Wait</span> <span class="k">for</span> <span class="nx">a</span> <span class="nx">moment</span> <span class="nx">to</span> <span class="nx">prevent</span> <span class="nx">rapid</span> <span class="nx">switching</span>

                <span class="nx">last_finger_position</span> <span class="o">=</span> <span class="p">[</span><span class="nx">index_tip</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span> <span class="nx">index_tip</span><span class="p">.</span><span class="nx">y</span><span class="p">]</span>

    <span class="err">#</span> <span class="nx">Show</span> <span class="nx">the</span> <span class="nx">frame</span> <span class="kd">with</span> <span class="nx">gesture</span> <span class="nx">feedback</span>
    <span class="nx">cv2</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="dl">'</span><span class="s1">Gesture Control</span><span class="dl">'</span><span class="p">,</span> <span class="nx">frame</span><span class="p">)</span>

    <span class="err">#</span> <span class="nx">Exit</span> <span class="k">if</span> <span class="dl">'</span><span class="s1">q</span><span class="dl">'</span> <span class="nx">is</span> <span class="nx">pressed</span>
    <span class="k">if</span> <span class="nx">cv2</span><span class="p">.</span><span class="nf">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nf">ord</span><span class="p">(</span><span class="dl">'</span><span class="s1">q</span><span class="dl">'</span><span class="p">):</span>
        <span class="k">break</span>

<span class="err">#</span> <span class="nx">Release</span> <span class="nx">resources</span>
<span class="nx">cap</span><span class="p">.</span><span class="nf">release</span><span class="p">()</span>
<span class="nx">cv2</span><span class="p">.</span><span class="nf">destroyAllWindows</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></figure>
:ET